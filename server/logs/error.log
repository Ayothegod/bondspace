[14 Nov, 2024 - 21:37:45:3745] [31merror[39m: [31mInvalid access token[39m
[15 Nov, 2024 - 15:28:54:2854] [31merror[39m: [31mUnauthorized request[39m
[15 Nov, 2024 - 22:31:04:314] [31merror[39m: [31mUnauthorized request[39m
[19 Nov, 2024 - 02:45:10:4510] [31merror[39m: [31mInvalid access token[39m
[19 Nov, 2024 - 02:45:10:4510] [31merror[39m: [31mInvalid access token[39m
[19 Nov, 2024 - 02:45:10:4510] [31merror[39m: [31mInvalid access token[39m
[19 Nov, 2024 - 02:46:42:4642] [31merror[39m: [31mInvalid access token[39m
[19 Nov, 2024 - 02:46:42:4642] [31merror[39m: [31mInvalid access token[39m
[19 Nov, 2024 - 02:46:42:4642] [31merror[39m: [31mInvalid access token[39m
[19 Nov, 2024 - 02:46:47:4647] [31merror[39m: [31mInvalid access token[39m
[19 Nov, 2024 - 02:46:47:4647] [31merror[39m: [31mInvalid access token[39m
[19 Nov, 2024 - 02:46:47:4647] [31merror[39m: [31mInvalid access token[39m
[19 Nov, 2024 - 02:46:51:4651] [31merror[39m: [31mInvalid access token[39m
[19 Nov, 2024 - 02:46:51:4651] [31merror[39m: [31mInvalid access token[39m
[19 Nov, 2024 - 02:46:51:4651] [31merror[39m: [31mInvalid access token[39m
[19 Nov, 2024 - 02:47:03:473] [31merror[39m: [31mInvalid access token[39m
[19 Nov, 2024 - 02:47:03:473] [31merror[39m: [31mInvalid access token[39m
[19 Nov, 2024 - 02:47:03:473] [31merror[39m: [31mInvalid access token[39m
[19 Nov, 2024 - 16:03:31:331] [31merror[39m: [31mInvalid access token[39m
[19 Nov, 2024 - 16:04:07:47] [31merror[39m: [31mcrypto is not defined[39m
[19 Nov, 2024 - 16:26:30:2630] [31merror[39m: [31mUnexpected token } in JSON at position 105[39m
[19 Nov, 2024 - 16:26:44:2644] [31merror[39m: [31mUnexpected token } in JSON at position 65[39m
[19 Nov, 2024 - 16:27:12:2712] [31merror[39m: [31mUnexpected token } in JSON at position 59[39m
[19 Nov, 2024 - 16:27:22:2722] [31merror[39m: [31mUnexpected token } in JSON at position 63[39m
[19 Nov, 2024 - 16:29:00:290] [31merror[39m: [31mUnexpected token } in JSON at position 62[39m
[19 Nov, 2024 - 16:46:17:4617] [31merror[39m: [31m[39m
[31mInvalid `prisma.user.create()` invocation in[39m
[31m/home/ayomide/code/hacks/bondspace/server/src/controllers/auth.control.ts:40:34[39m

[31m  37 [39m
[31m  38 const hashedPassword = await hashPassword(password);[39m
[31m  39 [39m
[31mâ†’ 40 const user = await prisma.user.create({[39m
[31m       data: {[39m
[31m         email: "Ayodasilva12@gmail.com",[39m
[31m         username: "Ayomide",[39m
[31m         password: "$argon2id$v=19$m=65536,t=3,p=4$RgrpHnXUAFDDzIUK0HkTSA$dyIs/7lZYGE4XLDFT2tjyAx1WQ+IM2AuSiVobNWuA3Y",[39m
[31m     +   fullname: String[39m
[31m       }[39m
[31m     })[39m

[31mArgument `fullname` is missing.[39m
[19 Nov, 2024 - 17:14:05:145] [31merror[39m: [31mUnexpected token } in JSON at position 39[39m
[19 Nov, 2024 - 17:14:48:1448] [31merror[39m: [31m[39m
[31mInvalid `prisma.space.create()` invocation in[39m
[31m/home/ayomide/code/hacks/bondspace/server/src/controllers/space.control.ts:26:39[39m

[31m  23 [39m
[31m  24 // NOTE: once a new user joins space they becomes a participant of the space[39m
[31m  25 [39m
[31mâ†’ 26 const newSpace = await prisma.space.create({[39m
[31m       data: {[39m
[31m         status: "started",[39m
[31m         spaceDuration: undefined,[39m
[31m         Chat: {[39m
[31m           create: {[39m
[31m             participants: {[39m
[31m               connect: {[39m
[31m                 id: "a7420f00-7b6f-4e96-b434-14b7af9e6e1a"[39m
[31m               }[39m
[31m             },[39m
[31m             status: "started"[39m
[31m           }[39m
[31m         },[39m
[31m     +   name: String[39m
[31m       },[39m
[31m       include: {[39m
[31m         participants: true,[39m
[31m         Chat: true[39m
[31m       }[39m
[31m     })[39m

[31mArgument `name` is missing.[39m
[19 Nov, 2024 - 17:16:23:1623] [31merror[39m: [31mUnexpected token } in JSON at position 39[39m
[19 Nov, 2024 - 17:16:26:1626] [31merror[39m: [31mUnexpected token } in JSON at position 39[39m
[19 Nov, 2024 - 17:17:01:171] [31merror[39m: [31mUnexpected token } in JSON at position 39[39m
[19 Nov, 2024 - 17:30:28:3028] [31merror[39m: [31mInvalid access token[39m
[19 Nov, 2024 - 17:46:14:4614] [31merror[39m: [31mParticipant already in the space.[39m
[19 Nov, 2024 - 17:47:42:4742] [31merror[39m: [31mParticipant already in the space.[39m
[19 Nov, 2024 - 17:47:50:4750] [31merror[39m: [31mParticipant already in the space.[39m
[19 Nov, 2024 - 17:48:44:4844] [31merror[39m: [31mParticipant already in the space.[39m
[19 Nov, 2024 - 17:49:55:4955] [31merror[39m: [31mParticipant already in the space.[39m
[19 Nov, 2024 - 17:51:04:514] [31merror[39m: [31mParticipant already in the space.[39m
[19 Nov, 2024 - 17:52:07:527] [31merror[39m: [31mParticipant already in the space.[39m
[19 Nov, 2024 - 17:52:30:5230] [31merror[39m: [31mParticipant already in the space.[39m
[19 Nov, 2024 - 17:52:32:5232] [31merror[39m: [31mParticipant already in the space.[39m
[19 Nov, 2024 - 17:54:23:5423] [31merror[39m: [31mParticipant already in the space.[39m
[19 Nov, 2024 - 17:56:31:5631] [31merror[39m: [31m[39m
[31mInvalid `prisma.space.update()` invocation in[39m
[31m/home/ayomide/code/hacks/bondspace/server/src/controllers/space.control.ts:102:45[39m

[31m   99   throw new ApiError(400, "Participant already in the space.");[39m
[31m  100 }[39m
[31m  101 [39m
[31mâ†’ 102 const updatedSpace = await prisma.space.update([39m
[31mAn operation failed because it depends on one or more records that were required but not found. Expected 1 records to be connected, found only 0.[39m
[19 Nov, 2024 - 17:57:10:5710] [31merror[39m: [31mParticipant already in the space.[39m
[19 Nov, 2024 - 17:57:31:5731] [31merror[39m: [31m[39m
[31mInvalid `prisma.space.update()` invocation in[39m
[31m/home/ayomide/code/hacks/bondspace/server/src/controllers/space.control.ts:102:45[39m

[31m   99   throw new ApiError(400, "Participant already in the space.");[39m
[31m  100 }[39m
[31m  101 [39m
[31mâ†’ 102 const updatedSpace = await prisma.space.update([39m
[31mAn operation failed because it depends on one or more records that were required but not found. No 'Chat' record to connect was found for a nested connect on one-to-one relation 'ChatToSpace'.[39m
[19 Nov, 2024 - 17:59:08:598] [31merror[39m: [31m[39m
[31mInvalid `prisma.space.update()` invocation in[39m
[31m/home/ayomide/code/hacks/bondspace/server/src/controllers/space.control.ts:100:45[39m

[31m   97   throw new ApiError(400, "Participant already in the space.");[39m
[31m   98 }[39m
[31m   99 [39m
[31mâ†’ 100 const updatedSpace = await prisma.space.update([39m
[31mAn operation failed because it depends on one or more records that were required but not found. No 'Chat' record to connect was found for a nested connect on one-to-one relation 'ChatToSpace'.[39m
[20 Nov, 2024 - 15:56:53:5653] [31merror[39m: [31mParticipant does not exist in the space[39m
[20 Nov, 2024 - 15:57:28:5728] [31merror[39m: [31mParticipant does not exist in the space[39m
[20 Nov, 2024 - 15:57:55:5755] [31merror[39m: [31mParticipant does not exist in the space[39m
[20 Nov, 2024 - 15:59:00:590] [31merror[39m: [31mParticipant does not exist in the space[39m
[20 Nov, 2024 - 15:59:10:5910] [31merror[39m: [31mParticipant does not exist in the space[39m
[20 Nov, 2024 - 15:59:48:5948] [31merror[39m: [31mParticipant does not exist in the space[39m
[20 Nov, 2024 - 16:00:44:044] [31merror[39m: [31mParticipant does not exist in the space[39m
[20 Nov, 2024 - 16:01:04:14] [31merror[39m: [31mParticipant does not exist in the space[39m
[20 Nov, 2024 - 16:01:27:127] [31merror[39m: [31mParticipant does not exist in the space[39m
[20 Nov, 2024 - 16:02:41:241] [31merror[39m: [31mParticipant does not exist in the space[39m
[20 Nov, 2024 - 16:03:01:31] [31merror[39m: [31mParticipant does not exist in the space[39m
[20 Nov, 2024 - 16:03:07:37] [31merror[39m: [31mParticipant does not exist in the space[39m
[20 Nov, 2024 - 16:03:51:351] [31merror[39m: [31mParticipant does not exist in the space[39m
[20 Nov, 2024 - 16:04:28:428] [31merror[39m: [31mParticipant does not exist in the space[39m
[20 Nov, 2024 - 16:04:57:457] [31merror[39m: [31mParticipant does not exist in the space[39m
[20 Nov, 2024 - 16:06:04:64] [31merror[39m: [31mParticipant does not exist in the space[39m
[20 Nov, 2024 - 16:14:41:1441] [31merror[39m: [31mParticipant already in the space.[39m
[20 Nov, 2024 - 16:20:47:2047] [31merror[39m: [31mSpace does not exist[39m
[20 Nov, 2024 - 16:21:48:2148] [31merror[39m: [31mParticipant already in the space.[39m
[20 Nov, 2024 - 16:28:45:2845] [31merror[39m: [31m[39m
[31mInvalid `prisma.space.update()` invocation in[39m
[31m/home/ayomide/code/hacks/bondspace/server/src/controllers/space.control.ts:200:45[39m

[31m  197   throw new ApiError(400, "Participant does not exist in the space");[39m
[31m  198 }[39m
[31m  199 [39m
[31mâ†’ 200 const updatedSpace = await prisma.space.update([39m
[31mThe change you are trying to make would violate the required relation 'ChatToSpace' between the `Chat` and `Space` models.[39m
[20 Nov, 2024 - 17:04:44:444] [31merror[39m: [31mCannot read properties of undefined (reading 'findMany')[39m
[20 Nov, 2024 - 17:06:26:626] [31merror[39m: [31mCannot read properties of undefined (reading 'findMany')[39m
[20 Nov, 2024 - 17:06:36:636] [31merror[39m: [31mCannot read properties of undefined (reading 'findMany')[39m
[20 Nov, 2024 - 17:12:52:1252] [31merror[39m: [31mCannot read properties of undefined (reading 'findMany')[39m
[20 Nov, 2024 - 17:13:21:1321] [31merror[39m: [31mCannot read properties of undefined (reading 'findMany')[39m
[20 Nov, 2024 - 17:13:24:1324] [31merror[39m: [31mCannot read properties of undefined (reading 'findMany')[39m
[20 Nov, 2024 - 17:13:27:1327] [31merror[39m: [31mCannot read properties of undefined (reading 'findMany')[39m
[20 Nov, 2024 - 21:18:41:1841] [31merror[39m: [31mInvalid access token[39m
[20 Nov, 2024 - 21:18:52:1852] [31merror[39m: [31mInvalid access token[39m
[20 Nov, 2024 - 21:30:12:3012] [31merror[39m: [31mInvalid access token[39m
[20 Nov, 2024 - 21:30:17:3017] [31merror[39m: [31mInvalid access token[39m
[20 Nov, 2024 - 21:32:35:3235] [31merror[39m: [31mInvalid access token[39m
[20 Nov, 2024 - 22:33:55:3355] [31merror[39m: [31mInvalid access token[39m
[21 Nov, 2024 - 02:44:26:4426] [31merror[39m: [31mParticipant already in the space.[39m
[21 Nov, 2024 - 13:23:49:2349] [31merror[39m: [31m[39m
[31mInvalid `prisma.space.update()` invocation in[39m
[31m/home/ayomide/code/hacks/bondspace/server/src/controllers/space.control.ts:295:43[39m

[31m  292   throw new ApiError(404, "Space does not exist");[39m
[31m  293 }[39m
[31m  294 [39m
[31mâ†’ 295 const updatedSpace = await prisma.space.update([39m
[31mOperations timed out after `N/A`. Context: The database failed to respond to a query within the configured timeout â€” see https://pris.ly/d/sqlite-connector for more details. Database: /home/ayomide/code/hacks/bondspace/server/prisma/./dev.db[39m
[21 Nov, 2024 - 13:23:56:2356] [31merror[39m: [31mInvalid access token[39m
[21 Nov, 2024 - 15:06:21:621] [31merror[39m: [31m[39m
[31mInvalid `prisma.message.create()` invocation in[39m
[31m/home/ayomide/code/hacks/bondspace/server/src/controllers/message.control.ts:80:40[39m

[31m  77   throw new ApiError(404, "chat does not exist");[39m
[31m  78 }[39m
[31m  79 [39m
[31mâ†’ 80 const message = await prisma.message.create({[39m
[31m       data: {[39m
[31m         chatId: "32d58206-1800-4924-98f4-9322ea57dab4",[39m
[31m         senderId: "c36b73e2-e841-493d-800c-8d47e074884b",[39m
[31m     +   content: String[39m
[31m       },[39m
[31m       include: {[39m
[31m         sender: {[39m
[31m           select: {[39m
[31m             id: true,[39m
[31m             username: true,[39m
[31m             avatar: {[39m
[31m               select: {[39m
[31m                 imageURL: true[39m
[31m               }[39m
[31m             },[39m
[31m             email: true[39m
[31m           }[39m
[31m         }[39m
[31m       }[39m
[31m     })[39m

[31mArgument `content` is missing.[39m
[21 Nov, 2024 - 15:20:27:2027] [31merror[39m: [31mChat does not exist[39m
[21 Nov, 2024 - 15:25:42:2542] [31merror[39m: [31mChat does not exist[39m
[21 Nov, 2024 - 15:25:42:2542] [31merror[39m: [31mChat does not exist[39m
[21 Nov, 2024 - 15:28:20:2820] [31merror[39m: [31m[39m
[31mInvalid `prisma.chat.findUnique()` invocation in[39m
[31m/home/ayomide/code/hacks/bondspace/server/src/controllers/message.control.ts:67:34[39m

[31m  64 const { chatId } = req.params;[39m
[31m  65 const { content } = req.body;[39m
[31m  66 [39m
[31mâ†’ 67 const chat = await prisma.chat.findUnique({[39m
[31m       where: {[39m
[31m         id: undefined,[39m
[31m     ?   spaceId?: String,[39m
[31m     ?   AND?: ChatWhereInput | ChatWhereInput[],[39m
[31m     ?   OR?: ChatWhereInput[],[39m
[31m     ?   NOT?: ChatWhereInput | ChatWhereInput[],[39m
[31m     ?   status?: StringFilter | String,[39m
[31m     ?   createdAt?: DateTimeFilter | DateTime,[39m
[31m     ?   updatedAt?: DateTimeFilter | DateTime,[39m
[31m     ?   name?: StringNullableFilter | String | Null,[39m
[31m     ?   messages?: MessageListRelationFilter,[39m
[31m     ?   participants?: UserListRelationFilter,[39m
[31m     ?   Space?: SpaceRelationFilter | SpaceWhereInput[39m
[31m       },[39m
[31m       include: {[39m
[31m         participants: true[39m
[31m       }[39m
[31m     })[39m

[31mArgument `where` of type ChatWhereUniqueInput needs at least one of `id` or `spaceId` arguments. Available options are marked with ?.[39m
[21 Nov, 2024 - 15:28:27:2827] [31merror[39m: [31m[39m
[31mInvalid `prisma.chat.findUnique()` invocation in[39m
[31m/home/ayomide/code/hacks/bondspace/server/src/controllers/message.control.ts:67:34[39m

[31m  64 const { chatId } = req.params;[39m
[31m  65 const { content } = req.body;[39m
[31m  66 [39m
[31mâ†’ 67 const chat = await prisma.chat.findUnique({[39m
[31m       where: {[39m
[31m         id: undefined,[39m
[31m     ?   spaceId?: String,[39m
[31m     ?   AND?: ChatWhereInput | ChatWhereInput[],[39m
[31m     ?   OR?: ChatWhereInput[],[39m
[31m     ?   NOT?: ChatWhereInput | ChatWhereInput[],[39m
[31m     ?   status?: StringFilter | String,[39m
[31m     ?   createdAt?: DateTimeFilter | DateTime,[39m
[31m     ?   updatedAt?: DateTimeFilter | DateTime,[39m
[31m     ?   name?: StringNullableFilter | String | Null,[39m
[31m     ?   messages?: MessageListRelationFilter,[39m
[31m     ?   participants?: UserListRelationFilter,[39m
[31m     ?   Space?: SpaceRelationFilter | SpaceWhereInput[39m
[31m       },[39m
[31m       include: {[39m
[31m         participants: true[39m
[31m       }[39m
[31m     })[39m

[31mArgument `where` of type ChatWhereUniqueInput needs at least one of `id` or `spaceId` arguments. Available options are marked with ?.[39m
[21 Nov, 2024 - 15:31:57:3157] [31merror[39m: [31m[39m
[31mInvalid `prisma.chat.findUnique()` invocation in[39m
[31m/home/ayomide/code/hacks/bondspace/server/src/controllers/message.control.ts:67:34[39m

[31m  64 const { chatId } = req.params;[39m
[31m  65 const { content } = req.body;[39m
[31m  66 [39m
[31mâ†’ 67 const chat = await prisma.chat.findUnique({[39m
[31m       where: {[39m
[31m         id: undefined,[39m
[31m     ?   spaceId?: String,[39m
[31m     ?   AND?: ChatWhereInput | ChatWhereInput[],[39m
[31m     ?   OR?: ChatWhereInput[],[39m
[31m     ?   NOT?: ChatWhereInput | ChatWhereInput[],[39m
[31m     ?   status?: StringFilter | String,[39m
[31m     ?   createdAt?: DateTimeFilter | DateTime,[39m
[31m     ?   updatedAt?: DateTimeFilter | DateTime,[39m
[31m     ?   name?: StringNullableFilter | String | Null,[39m
[31m     ?   messages?: MessageListRelationFilter,[39m
[31m     ?   participants?: UserListRelationFilter,[39m
[31m     ?   Space?: SpaceRelationFilter | SpaceWhereInput[39m
[31m       },[39m
[31m       include: {[39m
[31m         participants: true[39m
[31m       }[39m
[31m     })[39m

[31mArgument `where` of type ChatWhereUniqueInput needs at least one of `id` or `spaceId` arguments. Available options are marked with ?.[39m
[21 Nov, 2024 - 15:33:22:3322] [31merror[39m: [31m[39m
[31mInvalid `prisma.chat.findUnique()` invocation in[39m
[31m/home/ayomide/code/hacks/bondspace/server/src/controllers/message.control.ts:67:34[39m

[31m  64 const { chatId } = req.params;[39m
[31m  65 const { content } = req.body;[39m
[31m  66 [39m
[31mâ†’ 67 const chat = await prisma.chat.findUnique({[39m
[31m       where: {[39m
[31m         id: undefined,[39m
[31m     ?   spaceId?: String,[39m
[31m     ?   AND?: ChatWhereInput | ChatWhereInput[],[39m
[31m     ?   OR?: ChatWhereInput[],[39m
[31m     ?   NOT?: ChatWhereInput | ChatWhereInput[],[39m
[31m     ?   status?: StringFilter | String,[39m
[31m     ?   createdAt?: DateTimeFilter | DateTime,[39m
[31m     ?   updatedAt?: DateTimeFilter | DateTime,[39m
[31m     ?   name?: StringNullableFilter | String | Null,[39m
[31m     ?   messages?: MessageListRelationFilter,[39m
[31m     ?   participants?: UserListRelationFilter,[39m
[31m     ?   Space?: SpaceRelationFilter | SpaceWhereInput[39m
[31m       },[39m
[31m       include: {[39m
[31m         participants: true[39m
[31m       }[39m
[31m     })[39m

[31mArgument `where` of type ChatWhereUniqueInput needs at least one of `id` or `spaceId` arguments. Available options are marked with ?.[39m
[21 Nov, 2024 - 15:34:07:347] [31merror[39m: [31m[39m
[31mInvalid `prisma.chat.findUnique()` invocation in[39m
[31m/home/ayomide/code/hacks/bondspace/server/src/controllers/message.control.ts:67:34[39m

[31m  64 const { chatId } = req.params;[39m
[31m  65 const { content } = req.body;[39m
[31m  66 [39m
[31mâ†’ 67 const chat = await prisma.chat.findUnique({[39m
[31m       where: {[39m
[31m         id: undefined,[39m
[31m     ?   spaceId?: String,[39m
[31m     ?   AND?: ChatWhereInput | ChatWhereInput[],[39m
[31m     ?   OR?: ChatWhereInput[],[39m
[31m     ?   NOT?: ChatWhereInput | ChatWhereInput[],[39m
[31m     ?   status?: StringFilter | String,[39m
[31m     ?   createdAt?: DateTimeFilter | DateTime,[39m
[31m     ?   updatedAt?: DateTimeFilter | DateTime,[39m
[31m     ?   name?: StringNullableFilter | String | Null,[39m
[31m     ?   messages?: MessageListRelationFilter,[39m
[31m     ?   participants?: UserListRelationFilter,[39m
[31m     ?   Space?: SpaceRelationFilter | SpaceWhereInput[39m
[31m       },[39m
[31m       include: {[39m
[31m         participants: true[39m
[31m       }[39m
[31m     })[39m

[31mArgument `where` of type ChatWhereUniqueInput needs at least one of `id` or `spaceId` arguments. Available options are marked with ?.[39m
[21 Nov, 2024 - 15:34:38:3438] [31merror[39m: [31m[39m
[31mInvalid `prisma.chat.findUnique()` invocation in[39m
[31m/home/ayomide/code/hacks/bondspace/server/src/controllers/message.control.ts:70:34[39m

[31m  67 console.log(chatId);[39m
[31m  68 [39m
[31m  69 [39m
[31mâ†’ 70 const chat = await prisma.chat.findUnique({[39m
[31m       where: {[39m
[31m         id: undefined,[39m
[31m     ?   spaceId?: String,[39m
[31m     ?   AND?: ChatWhereInput | ChatWhereInput[],[39m
[31m     ?   OR?: ChatWhereInput[],[39m
[31m     ?   NOT?: ChatWhereInput | ChatWhereInput[],[39m
[31m     ?   status?: StringFilter | String,[39m
[31m     ?   createdAt?: DateTimeFilter | DateTime,[39m
[31m     ?   updatedAt?: DateTimeFilter | DateTime,[39m
[31m     ?   name?: StringNullableFilter | String | Null,[39m
[31m     ?   messages?: MessageListRelationFilter,[39m
[31m     ?   participants?: UserListRelationFilter,[39m
[31m     ?   Space?: SpaceRelationFilter | SpaceWhereInput[39m
[31m       },[39m
[31m       include: {[39m
[31m         participants: true[39m
[31m       }[39m
[31m     })[39m

[31mArgument `where` of type ChatWhereUniqueInput needs at least one of `id` or `spaceId` arguments. Available options are marked with ?.[39m
[21 Nov, 2024 - 15:35:02:352] [31merror[39m: [31m[39m
[31mInvalid `prisma.chat.findUnique()` invocation in[39m
[31m/home/ayomide/code/hacks/bondspace/server/src/controllers/message.control.ts:69:34[39m

[31m  66 [39m
[31m  67 console.log("chatId:", chatId);[39m
[31m  68 [39m
[31mâ†’ 69 const chat = await prisma.chat.findUnique({[39m
[31m       where: {[39m
[31m         id: undefined,[39m
[31m     ?   spaceId?: String,[39m
[31m     ?   AND?: ChatWhereInput | ChatWhereInput[],[39m
[31m     ?   OR?: ChatWhereInput[],[39m
[31m     ?   NOT?: ChatWhereInput | ChatWhereInput[],[39m
[31m     ?   status?: StringFilter | String,[39m
[31m     ?   createdAt?: DateTimeFilter | DateTime,[39m
[31m     ?   updatedAt?: DateTimeFilter | DateTime,[39m
[31m     ?   name?: StringNullableFilter | String | Null,[39m
[31m     ?   messages?: MessageListRelationFilter,[39m
[31m     ?   participants?: UserListRelationFilter,[39m
[31m     ?   Space?: SpaceRelationFilter | SpaceWhereInput[39m
[31m       },[39m
[31m       include: {[39m
[31m         participants: true[39m
[31m       }[39m
[31m     })[39m

[31mArgument `where` of type ChatWhereUniqueInput needs at least one of `id` or `spaceId` arguments. Available options are marked with ?.[39m
